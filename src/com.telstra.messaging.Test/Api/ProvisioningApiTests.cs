/* 
 * Telstra Messaging API
 *
 *  The Telstra SMS Messaging API allows your applications to send and receive SMS text messages from Australia's leading network operator.  It also allows your application to track the delivery status of both sent and received SMS messages. 
 *
 * OpenAPI spec version: 2.2.4
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using com.telstra.messaging.Client;
using com.telstra.messaging.Api;
using com.telstra.messaging.Model;

namespace com.telstra.messaging.Test
{
    /// <summary>
    ///  Class for testing ProvisioningApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ProvisioningApiTests
    {
        private ProvisioningApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ProvisioningApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ProvisioningApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ProvisioningApi
            //Assert.IsInstanceOfType(typeof(ProvisioningApi), instance, "instance is a ProvisioningApi");
        }

        
        /// <summary>
        /// Test CreateSubscription
        /// </summary>
        [Test]
        public void CreateSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //ProvisionNumberRequest body = null;
            //var response = instance.CreateSubscription(authorization, body);
            //Assert.IsInstanceOf<ProvisionNumberResponse> (response, "response is ProvisionNumberResponse");
        }
        
        /// <summary>
        /// Test DeleteSubscription
        /// </summary>
        [Test]
        public void DeleteSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //instance.DeleteSubscription(authorization);
            
        }
        
        /// <summary>
        /// Test GetSubscription
        /// </summary>
        [Test]
        public void GetSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //var response = instance.GetSubscription(authorization);
            //Assert.IsInstanceOf<List<ProvisionNumberResponse>> (response, "response is List<ProvisionNumberResponse>");
        }
        
    }

}
