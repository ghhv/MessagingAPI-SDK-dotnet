/* 
 * Telstra Messaging API
 *
 *  The Telstra SMS Messaging API allows your applications to send and receive SMS text messages from Australia's leading network operator.  It also allows your application to track the delivery status of both sent and received SMS messages. 
 *
 * OpenAPI spec version: 2.2.4
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using com.telstra.messaging.Client;
using com.telstra.messaging.Api;
using com.telstra.messaging.Model;

namespace com.telstra.messaging.Test
{
    /// <summary>
    ///  Class for testing MessagingApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class MessagingApiTests
    {
        private MessagingApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new MessagingApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MessagingApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MessagingApi
            //Assert.IsInstanceOfType(typeof(MessagingApi), instance, "instance is a MessagingApi");
        }

        
        /// <summary>
        /// Test GetMMSStatus
        /// </summary>
        [Test]
        public void GetMMSStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string messageid = null;
            //var response = instance.GetMMSStatus(messageid);
            //Assert.IsInstanceOf<OutboundPollResponse> (response, "response is OutboundPollResponse");
        }
        
        /// <summary>
        /// Test GetSMSStatus
        /// </summary>
        [Test]
        public void GetSMSStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string messageId = null;
            //var response = instance.GetSMSStatus(messageId);
            //Assert.IsInstanceOf<OutboundPollResponse> (response, "response is OutboundPollResponse");
        }
        
        /// <summary>
        /// Test RetrieveSMSResponses
        /// </summary>
        [Test]
        public void RetrieveSMSResponsesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RetrieveSMSResponses();
            //Assert.IsInstanceOf<List<InboundPollResponse>> (response, "response is List<InboundPollResponse>");
        }
        
        /// <summary>
        /// Test SendMMS
        /// </summary>
        [Test]
        public void SendMMSTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SendMmsRequest body = null;
            //var response = instance.SendMMS(body);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test SendSMS
        /// </summary>
        [Test]
        public void SendSMSTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SendSMSRequest payload = null;
            //var response = instance.SendSMS(payload);
            //Assert.IsInstanceOf<MessageSentResponse> (response, "response is MessageSentResponse");
        }
        
    }

}
