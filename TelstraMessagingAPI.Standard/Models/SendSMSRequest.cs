/*
 * TelstraMessagingAPI.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using TelstraMessagingAPI.Standard;
using TelstraMessagingAPI.Standard.Utilities;


namespace TelstraMessagingAPI.Standard.Models
{
    public class SendSMSRequest : BaseModel 
    {
        // These fields hold the values for the public properties.
        private string to;
        private string body;
        private string mfrom;
        private int? validity;
        private int? scheduledDelivery;
        private string notifyURL;
        private bool? replyRequest;

        /// <summary>
        /// Phone number (in E.164 format) to send the SMS to. This number
        /// can be in international format if preceeded by a ‘+’, or in national format.
        /// </summary>
        [JsonProperty("to")]
        public string To 
        { 
            get 
            {
                return this.to; 
            } 
            set 
            {
                this.to = value;
                onPropertyChanged("To");
            }
        }

        /// <summary>
        /// The text body of the message. Messages longer than 160 characters
        /// will be counted as multiple messages.
        /// </summary>
        [JsonProperty("body")]
        public string Body 
        { 
            get 
            {
                return this.body; 
            } 
            set 
            {
                this.body = value;
                onPropertyChanged("Body");
            }
        }

        /// <summary>
        /// Phone number (in E.164 format) the SMS was sent from. If not
        /// present, the serverice will use the mobile number associated with the application,
        /// or it be an Alphanumeric address of up to 11 characters.
        /// </summary>
        [JsonProperty("from")]
        public string From 
        { 
            get 
            {
                return this.mfrom; 
            } 
            set 
            {
                this.mfrom = value;
                onPropertyChanged("From");
            }
        }

        /// <summary>
        /// How long the platform should attempt to deliver the message for.
        /// This period is specified in minutes from the message
        /// </summary>
        [JsonProperty("validity")]
        public int? Validity 
        { 
            get 
            {
                return this.validity; 
            } 
            set 
            {
                this.validity = value;
                onPropertyChanged("Validity");
            }
        }

        /// <summary>
        /// How long the platform should wait before attempting to send the
        /// message - specified in minutes.
        /// </summary>
        [JsonProperty("scheduledDelivery")]
        public int? ScheduledDelivery 
        { 
            get 
            {
                return this.scheduledDelivery; 
            } 
            set 
            {
                this.scheduledDelivery = value;
                onPropertyChanged("ScheduledDelivery");
            }
        }

        /// <summary>
        /// Contains a URL that will be called once your message has been
        /// processed. The status may be delivered, expired, deleted, etc.
        /// </summary>
        [JsonProperty("notifyURL")]
        public string NotifyURL 
        { 
            get 
            {
                return this.notifyURL; 
            } 
            set 
            {
                this.notifyURL = value;
                onPropertyChanged("NotifyURL");
            }
        }

        /// <summary>
        /// If set to true, the reply message functionality will be implemented
        /// and the to address will be ignored if present. If false or not present,
        /// then normal message handling is implemented.
        /// </summary>
        [JsonProperty("replyRequest")]
        public bool? ReplyRequest 
        { 
            get 
            {
                return this.replyRequest; 
            } 
            set 
            {
                this.replyRequest = value;
                onPropertyChanged("ReplyRequest");
            }
        }
    }
} 